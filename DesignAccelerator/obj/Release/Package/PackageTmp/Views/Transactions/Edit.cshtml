@model DesignAccelerator.Models.ViewModel.TransactionsViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<span class="message">
        @TempData["Message"]
    </span>*@

<style>
    .button {
        background-color: #af2024;
        color: #ffffff;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Transaction</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TransactionSeq)
        @Html.HiddenFor(model => model.daId)

        <div class="form-group">
            @Html.LabelFor(m => m.HighLevelTxnID, "High Level Transaction ID", new { @class = "col-md-3 control-label", @style = "text-align:left" })
            <div class="col-md-9">
                <span class="form-inline" style="margin-left:-70px">
                    @Html.TextBoxFor(m => m.HighLevelTxnID, new { @maxlength = "10", @class = "form-control", @required = "Required" })
                    @Html.ValidationMessageFor(m => m.HighLevelTxnID, "", new { @class = "text-danger" })
                </span>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.HighLevelTxnDesc, "High Level Transaction", new { @class = "col-md-3 control-label", @style = "text-align:left" })
            <div class="col-md-9">
                <span class="form-inline" style="margin-left:-70px">
                    @Html.TextBoxFor(m => m.HighLevelTxnDesc, new { @maxlength = "50", @class = "form-control", @required = "Required" })
                    @Html.ValidationMessageFor(m => m.HighLevelTxnDesc, "", new { @class = "text-danger" })
                </span>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.lstLifeCycle, "Life Cycle", new { @class = "col-md-3 control-label", @style = "text-align:left" })
            <div class="col-md-9">
                <span class="form-inline" style="margin-left:-70px">
                    @Html.DropDownListFor(model => model.LifeCycleID, new SelectList(Model.lstLifeCycle, "LifeCycleID", "LifeCycleDesc"), "-- - Select-- - ", new { @class = "form-control", @required = "Required" })
                    @Html.ValidationMessageFor(m => m.ReqReference, "", new { @class = "text-danger" })
                </span>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ReqReference, "Requirement Reference", new { @class = "col-md-3 control-label", @style = "text-align:left" })
            <div class="col-md-9">
                <span class="form-inline" style="margin-left:-70px">
                    @Html.TextBoxFor(m => m.ReqReference, new { @maxlength = "50", @class = "form-control", @required = "Required" })
                    @Html.ValidationMessageFor(m => m.ReqReference, "", new { @class = "text-danger" })
                </span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-9" style="margin-left:222px">
                <input type="submit" value="Save" class="btn btn-default; button" />
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back", "Index")
    @*<a href="" id="backlink">Back</a>*@
</div>

@section Scripts {
    <script src="@Url.Content("~/Scripts/jquery.maskedinput.min.js")" type="text/javascript"></script>

    <script type="text/javascript">
        //debugger;
        $(document).ready(function () {
            //text formatting
            $("#HighLevelTxnID").mask("aa_aaaa_99");

            //Added code to disable the underscore in high level transaction

            $("#disUnderScore").keypress(function (e) {

                var keycode = e.charCode || e.keyCode;
                if (keycode == 95) { //ASCII value of underscore key = 95;
                    return false;
                }
            });

            // cannot copy or paste the value for safety purpose(to prevent under score)

            $('#disUnderScore').bind("cut copy paste", function (e) {
                e.preventDefault();
            });

        });

        $("#HighLevelTxnDesc").bind('keypress', function (event) {

            var regex = new RegExp("^[a-zA-Z0-9]+$");
            var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
            if (!regex.test(key)) {
                if (event.charCode != 32) {//if key stroke is space bar, then pass. ASCII code for space bar is 32
                    event.preventDefault();
                    return false;
                }
            }
        });

        $("#ReqReference").bind('keypress', function (event) {

            var regex = new RegExp("^[a-zA-Z0-9]+$");
            var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
            if (!regex.test(key)) {
                if (event.charCode != 32 && event.charCode != 46) {//if key stroke is space bar, then pass. ASCII code for space bar is 32
                    event.preventDefault();
                    return false;
                }
            }
        });


    </script>
}