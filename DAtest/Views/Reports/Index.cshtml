@model DesignAccelerator.Models.ViewModel.ReportsViewModel

@{
    ViewBag.Title = "Reports";
}

<div class="navbar-static-top">
    <ul class="breadcrumb"></ul>
</div>
<h2>Reports Mapping</h2>
<hr />
<style type="text/css">
    table, tr, td, th {
        border: 1px solid #000;
        position: relative;
        padding: 9.9px;
        white-space: nowrap;
        text-align:center;
    }

    .hide {
        display: none;
    }

    th span.temp {
        transform-origin: 115px;
        transform: rotate(-90deg);
        margin: 2px 2px 2px 0;
        vertical-align: bottom;
        margin-top: 0px;
        font-size: 11px;
        width: 13.35px;
        height: 230px;
        white-space: nowrap;
        /*position: relative;*/
        display: block;
        float: right;
        border-top: 0px;
        border-right: 0px;
        border-left: 0px;
        border-bottom: 0px;
    }

    .no-js #loader {
        display: none;
    }

    .js #loader {
        display: block;
        position: absolute;
        left: 100px;
        top: 0;
    }

    .se-pre-con {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 9999;
        background: url('/DesignAccelerator/Content/Images/pageLoad.gif') center no-repeat rgb(249,249,249);
        opacity: .8;
    }

    #tooltip {
        position: relative;
    }


    #tooltip:hover .tooltiptext {
        visibility: visible;
        opacity: 1;
    }

    td span.tooltiptext {
        transform-origin: 100px;
        margin: 2px 2px 2px 0;
        vertical-align: bottom;
        margin-top: 0px;
        font-size: 11px;
        width: 13.35px;
        white-space: nowrap;
        /*position: relative;*/
        display: block;
        float: right;
        visibility: hidden;
        opacity: 0;
        transition: opacity 1s;
    }

    #tooltip .tooltiptext {
        visibility: hidden;
        width: 220px;
        background-color: #555;
        color: #fff;
        text-align: center;
        border-radius: 6px;
        padding: 5px 0;
        position: absolute;
        z-index: 1;
        bottom: 125%;
        left: 50%;
        margin-left: -60px;
        opacity: 0;
        transition: opacity 1s;
    }
     #TT {
        overflow-x: scroll;
        margin-left: 38.1em;
        overflow-y: visible;
        padding: 0px;
    }
    
    /*Sno header*/
    #headcol {
        position: absolute;
        width: 3.6em;
        left: 0;
        height: 254px;
        border-right: 0px none black;
        padding-left: 3.6px;
        padding-top: 115px;
        /*text-align: center;*/
        border: 1px solid #000;
    }
    /*Sno body*/
    #colid {
        position: absolute;
        width: 3.6em;
        left: 0;
        border-right: 0px none black;
        height: 3.7em;
        border-top: 0px;
        border: 1px solid #000;
    }
    /*rr header*/
    #rridth {
        position: absolute;
        /*width: 7.9em;*/
        width:290px; 
        left: 0;
        height: 254px;
        border-right: 0px none black;
        margin-left: 50px;
        padding-top: 115px;
        /*text-align: center;*/
        border: 1px solid #000;
    }
    /*rr body*/
    #rowidtd {
        position: absolute;
        /*width: 7.9em;*/
        width:290px; 
        left: 0;
        border-right: 0px none black;
        margin-left: 50px;
        border-top: 0px;
        height: 3.7em;
        text-align: left;
        border: 1px solid #000;
    }
    /*rn header*/
    #Attrid {
        width: 208px;
        /*padding: 106px;*/
        padding-top:115px;
        left: 200px;
        position: absolute;
        margin-left: 140px;
        height: 254px;
        border-right: 0px;
        /*text-align:center;*/
        border: 1px solid #000;
    }
    /*rn body*/
    #attrtd {
        width: 208px;
        padding: 13.5px;
        left: 200px;
        position: absolute;
        margin-left: 140px;
        border-top: 0px;
        height: 3.7em;
        border-right: 0px;
        text-align:left;
        border: 1px solid #000;
    }

    /*rd header*/
    #Repdescid {
        position: absolute;
        /*width: 7.9em;*/
        width:180px; 
        left: 0;
        height: 254px;
        border-right: 0px none black;
        margin-left: 50px;
        padding-top: 110px;
        /*text-align: center;*/
        border: 1px solid #000;
    }
    /*rd body*/
    #repdesctd {
        position: absolute;
        width: 7.9em;
        width:180px; 
        left: 0;
        border-right: 0px none black;
        margin-left: 50px;
        border-top: 0px;
        height: 3.7em;
        border: 1px solid #000;
    }

    .form-control {
        height: 30px;
    }
</style>
@using (Html.BeginForm("Index", "Reports", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.HiddenFor(model => model.daId)
    <div class="row clearfix">
        <span class="navbar-left">
            &nbsp;&nbsp;&nbsp;&nbsp;<a class="" href="@Url.Action("Index", "LinkingUI", new {id = Model.daId })">Link To LinkingUICreation</a>
            <span class="glyphicon glyphicon-expand"></span>
        </span>
        <div class="col-md-12 column" id="divRep"></div>
        <div class="col-md-12 column">
            <button id="btnSave" type="button" class="btn btn-primary">Save Changes</button>
            <button id="btnAddRow" type="button" class="btn btn-primary">Add New Row</button>
        </div>
    </div>
    <div class="se-pre-con"></div>

}

@section Scripts{
    <script type="text/javascript">
        var highLevelTransactions = [];
        var srno=1;
        var rowCount;

        $(document).ready(function () {
            $(".se-pre-con").fadeOut("slow");

            var model=@Html.Raw(Json.Encode(Model));
            var reportsTable = makeTable(model,model.lstHighLevelTxns);

            var header_height = 220;
            $('table th span').each(function () {
                if ($(this).outerWidth() > header_height) header_height = $(this).outerWidth();
            });

            $('table th').height(header_height);

            //to add new row
            $("#btnAddRow").click(function(e){
                // alert('inside add row btn click');
                // alert("new Row serial num: "+srno);

                //Stops or pauses Add function being exceuted
                e.preventDefault();

                var valdationstatus = doValidations();
                if (valdationstatus == true)
                {
                    var newrow=AddRow(model)
                    //$('#tblReports>tbody>tr').filter(":last").after(newrow);
                    $("#TT tbody").append(newrow);
                    rindex();
                }
            });


            //To delete row
            $("#TT").on('click', 'button.removebutton', function () {
                if (confirm("Do you want to delete this row?")) {
                    rowCount=$('#TT tr').length;
                    if(rowCount ==2)
                    {
                        alert("Cannot delete all the rows");
                    }
                    else
                    {
                        // var reportName = $("td:nth-child(3) input[type=text]").val();

                        //to delete particular row pass <tr> to variable to find from particular input type
                        var item = $(this).closest("tr");

                        var reportName = item.find("td:nth-child(3) input[type=text]").val();

                        var daid =$("#daId").val();

                        var sno = item.find("td:first-child").text();

                        var MyAppUrlSettings = {
                            MyUsefulUrl: '@Url.Action("DeleteReport", "Reports")'
                        }

                        $.ajax({
                            type: 'POST',
                            dataType: "json",
                            traditional: true,
                            contentType: "application/json; charset=utf-8",
                            url:MyAppUrlSettings.MyUsefulUrl,
                            // url:"/Reports/DeleteReport/",
                            //data: JSON.stringify(obj),
                            data: JSON.stringify({ postData: reportName, DaId:daid}),//sending the id to delete from the db
                            // async: false,

                            success: function (result) {
                                alert("Selected value has been deleted for row No :"+sno);
                                isSuccess = result;
                            }
                        });

                        $(this).closest('tr').remove();
                        srno--;
                        rindex(this);
                    }
                }
                return false;
            });

            $("#btnSave").on("click", function (e) {

                var valdationstatus = doValidations();
                // setting the URL where ajax is used
                var MyAppUrlSettings = {
                    MyUsefulUrl: '@Url.Action("SaveData", "Reports")'
                }
                if (valdationstatus == true)
                {
                    var jsondata = getJSONFromTable(model);
                    //alert ("Data from table: "+jsondata);

                    $.blockUI(
                    {
                        message: '<h8><img src="@Url.Content("~/Content/Images/busy.gif")" /> StandBy...</h8>'
                    });
                    $.ajax({

                        url: MyAppUrlSettings.MyUsefulUrl,
                        data: JSON.stringify(jsondata),
                        async: false,
                        type: 'POST',
                        contentType: 'application/json; charset=utf-8',
                        success: function (result) {
                            isSuccess = result;
                        },
                        error: function (result) {
                            isSuccess = result;
                        }

                    }).done(function () {
                        if (isSuccess == "1") {           // Successfully saved
                            //alert("Record Inserted");
                            //window.location.href='/Reports/Index'
                            location.reload();
                            $.unblockUI();
                        }
                        else {                      // Data Error
                            $.unblockUI();
                            alert("Error. Please, check the data");
                        }
                    });
                }

            });
            $('.breadcrumb').append('<li><a href="@Url.Action("Index", "Client")"><span>' + "@Model.ClientName" + '</span></a></li>');
            $('.breadcrumb').append('<li><a href="@Url.Action("Index", "Project", new {id = Model.ClientID })"><span>' + "@Model.ProjectName" + '</span></a></li>');
            $('.breadcrumb').append('<li><a href="@Url.Action("Index", "Application", new {id = Model.ProjectID })"><span>' + "@Model.ApplicationName" + '</span></a></li>');
            $('.breadcrumb').append('<li><a href="@Url.Action("Index", "Module", new {id = Model.ApplicationID })"><span>' + "@Model.ModuleName" + '</span></a></li>');
            $('.breadcrumb').append('<li><a href="@Url.Action("Index", "DesignAccelerator", new {id = Model.ModuleId })"><span>' + "@Model.daName" + '</span></a></li>');
            $('.breadcrumb').append('<li><a href="@Url.Action("Index", "Products", new {id = Model.daId })"><span>' + "Products" + '</span></a></li>');
            $('.breadcrumb').append('<li><a href="@Url.Action("Index", "Transactions", new {id = Model.daId })"><span>' + "Transactions" + '</span></a></li>');
            $('.breadcrumb').append('<li><a href="@Url.Action("Index", "AttributeList", new {id = Model.daId })"><span>' + "Attribute" + '</span></a></li>');
            $('.breadcrumb').append('<li><a href="@Url.Action("Index", "TransactionAttribute", new {id = Model.daId })"><span>' + "Transaction Attribute" + '</span></a></li>');
            $('.breadcrumb').append('<li><a href="@Url.Action("Index", "BusinessRules", new {id = Model.daId })"><span>' + "BusinessRules" + '</span></a></li>');
            $('.breadcrumb').append('<li><a href="@Url.Action("Index", "SMD", new {id = Model.daId })"><span>' + "SourceDestinationMode" + '</span></a></li>');
            $('.breadcrumb').append('<li><a href="@Url.Action("Index", "Interface", new {id = Model.daId })"><span>' + "Interface" + '</span></a></li>');
            $('.breadcrumb').append('<li><a href="@Url.Action("Index", "DF", new {id = Model.daId })"><span>' + "DF" + '</span></a></li>');
            $('.breadcrumb').append('<li><a href="@Url.Action("Index", "ChannelsAndAlerts", new {id = Model.daId })"><span>' + "ChannelsAndAlerts" + '</span></a></li>');

        });

        function doValidations()
        {
            var text1,text2,srcflag,prdflag, chk;
            $('#TT').each(function(){
                $('tbody tr').each(function(){
                    srcflag=false;prdflag=false;chk=false;
                    //modeflag=false;attrflag=false;attrvalflag=false;

                    $(this).closest('tr').find('input:text').each(function(){
                        if($(this).attr("name")=="reportName") text1=$(this).val();
                    });
                    if(text1=="")
                    {

                        alert("Report name should not be empty in a row SlNo: "+ ($(this).index()+1));
                        return false;
                    }
                    else if(text1 > 50)
                    {
                        alert("Report name should not be greater than 50 characters");
                        return false;
                    }


                    $(this).closest('tr').find('input:text').each(function(){
                        if($(this).attr("name")=="reportDesc") text2=$(this).val();
                    });
                    if(text2=="")
                    {
                        alert("Report description should not be empty in a row SlNo: "+ ($(this).index()+1));
                        return false;
                    }

                    $(this).closest('tr').find('input:checkbox').each(function(){
                        if($(this).prop('checked') == true) {
                            chk = true;
                            return false;
                        }
                    });

                    if (chk ==false)
                    {
                        alert("Atleast one high level transaction checkbox should be selected in row SlNo: " + ($(this).index() + 1));
                        return false;
                    }
                    $(this).closest('tr').find('select').each(function(){
                        var srcid = $(this).prop('name').indexOf('source');
                        //alert("Source ID "+srcid);
                        if (srcid !=-1  && $(this).val() !="0")
                        {
                            srcflag = true;
                            return false;
                        }
                    });
                    if (srcflag ==false)
                    {
                        alert("Atleast one Source should be selected in row SlNo: " + ($(this).index() + 1));
                        return false;
                    }

                    $(this).closest('tr').find('select').each(function(){
                        var periodid = $(this).prop('name').indexOf('period');
                        if (periodid !=-1  && $(this).val() !="0")
                        {
                            prdflag = true;
                            return false;
                        }
                    });
                    if (prdflag ==false)
                    {
                        alert("Atleast one Period Type should be selected in row SlNo: " + ($(this).index() + 1));
                        return false;
                    }
                });
            });

            if (text1 != "" && text2 !="" && chk == true && srcflag==true && prdflag==true)
            {
                if(!CheckDuplicateReportName())
                    return true;
                else
                    return false;
            }
            else
            {
                return false;
            }
        }
        function CheckDuplicateReportName()
        {
            var cnt = 0;
            $("table tbody tr").each(function () {
                var self = $(this);
                var reportName = self.find("td:nth-child(3) input[type=text]").val();

                $("table tbody tr").each(function () {
                    var nextReportName = $(this).find("td:nth-child(3) input[type=text]").val();

                    if(reportName.toUpperCase() == nextReportName.toUpperCase())
                        cnt++;
                });
                if(cnt >=2)
                    return false;
                else
                    cnt = 0;
            });
            if(cnt >= 2)
            {
                alert("Report Name Already Exists");
                return true;
            }
            else
            {
                return false;
            }
        }

        function rindex()
        {
            $("#TT table").each(function(){

                $('tr').each(function (index) {
                    $(this).find('td:nth-child(1)').html(index);
                });
            });
        }

        function makeTable(model,highLevelTransactions){

            var table = $("<div id = 'TT'><table id = 'tblReports' class='table table-bordered table-hover'>");

            ///
            /// Table head
            ///
            html = "<thead>" +
                   "    <tr id='r0'>" +
                   "        <th id ='headcol'>S No.</th>" +
                   "        <th id ='rridth'>Requirement Reference*</th>" +
                   "        <th id ='Attrid'>Report Name*</th>" +
                   "        <th>Report Description*</th>"

            $.each(highLevelTransactions , function (index, value){
                html = html +  "        <th><span class='temp'>" + value.HighLevelTxnID+'_'+value.HighLevelTxnDesc + "</span></th>";
            });

            html = html +  "<th>Period*</th>" +

            "<th>System / Source*</th>" +
                "<th>Delete</th>"+
                "<th class='hide'>ID</th>     </tr>" +
                   "</thead>" ;

            var tableHead = $(html);
            table.append(tableHead);

            var tbody=$("<tbody/>");
            //var srno=1;
            //To get the records already existing
            var r=  $(model.lstReports).filter(function (i,n){return n.reportName !=null});
            if(r.length>0)
            {
                var reportDataLst = [];
                $.each(model.lstReports,function(index,value){
                    if($.inArray(value.reportName,reportDataLst)==-1){
                        reportDataLst.push((value.reportName));//pushing number of rows to be added
                    }
                });

                var transseq = [];

                $.each(reportDataLst,function(index,val1){
                    $.each(model.lstReports, function(index, val2) {
                        if (val2.reportName==val1){
                            transseq.push((val2.transactionSeq));//pushing transaction sequence to array
                        }
                    });
                    var currow=  $(model.lstReports).filter(function (i,n){return n.reportName == val1});
                    //var row = LoadRow(currow[0],transseq,model);
                    var row = LoadRow(currow,transseq,model);
                    tbody.append(row);
                    transseq.length = 0;
                });
            }
            else// when no row exists display a empty row
            {
                var row = AddRow(model);
                tbody.append(row);
            }
            table.append(tbody);
            return $('#divRep').append(table);
        }

        function LoadRow(curRow,transeq,model)//,highLevelTransactions)
        {
            //var srno=1;
            var reportRowNum=0;
            currentRow=curRow[0];
            var row = $("<tr/>");
            $(row).html("<td id='colid'>"+ (srno++) +"</td>" + //1
                         "<td id='rowidtd'><input name='reqref' type='text' maxlength='100' placeholder='Requirement Reference' onkeypress='return DisableSpecialChars(event)' class='form-control input-md' value='"+currentRow.reqReference+"'   /></td>" + //2
                         "<td id='attrtd'><input name='reportName' type='text' onkeypress='return DisableAllSpecialChars(event)' maxlength='50' placeholder='Report Name' class='form-control input-md' value='"+currentRow.reportName +"' /></td>" + //2
                         "<td><input name='reportDesc' type='text' onkeypress='return DisableSomeSpecialChars(event)' maxlength='100' placeholder='Report Description' class='form-control input-md' value='"+currentRow.reportDesc+"' /></td>" //3
            );

            //var isLinked= curRow[reportRowNum].transactionSeq ;
            $.each(model.lstHighLevelTxns , function (index, value){

                var result = $.grep(curRow, function(e){ return e.transactionSeq == value.TransactionSeq; });

                if(result.length > 0)
                {
                    if (result[0].isLinked==true)
                        $(row).append("<td id='tooltip'><span class='tooltiptext'>"+value.HighLevelTxnID + '_' + value.HighLevelTxnDesc+"</span><input type='hidden' name='hdnchk' value='" + result[0].reportID +"'><input type='checkbox' value='" + result[0].transactionSeq +"' checked=checked /> </td>"); //5
                    else
                        $(row).append("<td id='tooltip'><span class='tooltiptext'>"+value.HighLevelTxnID + '_' + value.HighLevelTxnDesc+"</span><input type='hidden' name='hdnchk' value='" + result[0].reportID +"'><input type='checkbox' value='" + result[0].transactionSeq +"' /> </td>"); //5
                }
                else
                    $(row).append("<td id='tooltip'><span class='tooltiptext'>"+value.HighLevelTxnID + '_' + value.HighLevelTxnDesc+"</span><input type='hidden' name='hdnchk' value='0'><input type='checkbox' value='" + value.TransactionSeq +"' /> </td>"); //5
            });

            var period=  "<td><select name='period' class ='selectpicker'><option value='0'>--Select-- </option>";

            $.each(model.lstPeriodType,function(key,val){
                if(val!=null)
                {
                    if(val.periodTypeID==currentRow.periodId)

                        period=period+ "<option value='"+val.periodTypeID + "'selected>"+val.periodTypeDesc+"</option>"
                    else
                        period=period+ "<option value='"+val.periodTypeID+ "'>"+val.periodTypeDesc+"</option>"
                }
            })+"</select></td>";
            $(row).append(period);

            var src=  "<td><select name='source' class ='selectpicker'><option value='0'>--Select-- </option>";//+ t[0].lstSource["SourceDesc"]+ "'    </td>"//+ //+ //4

            $.each(model.lstSource,function(key,val){
                if(val!=null)
                {
                    if(val.sourceID==currentRow.sourceId)
                        src=src+ "<option value='"+val.sourceID+ "'selected>"+val.sourceDesc+"</option>"
                    else
                        src=src+ "<option value='"+val.sourceID+ "'>"+val.sourceDesc+"</option>"
                }
            })+"</select></td>";
            $(row).append(src);
            $(row).append("<td><button type='button' class='removebutton' title='Remove this row'>X</button></td>");

            return row;
        }

        function AddRow(model)
        {
            var srno = 1;
            var row = $("<tr/>");
            $(row).html("<td id='colid'>"+ srno +"</td>" + //1
                        "<td id='rowidtd'><input type='hidden' name='hdnReprtID' value=''><input name='reqref' type='text' maxlength='100' placeholder='Requirement Reference' onkeypress='return DisableSpecialChars(event)' class='form-control input-md'   /></td>" + //2
                        "<td id='attrtd'><input name='reportName' type='text' onkeypress='return DisableAllSpecialChars(event)' maxlength='20' placeholder='Report Name' class='form-control input-md' /></td>" + //3
                        "<td><input name='reportDesc' type='text' onkeypress='return DisableSomeSpecialChars(event)' maxlength='100' placeholder='Report Description' class='form-control input-md' /></td>" //3
            );

            $.each(model.lstHighLevelTxns , function (index, value){
                $(row).append("<td id='tooltip'><span class='tooltiptext'>"+value.HighLevelTxnID + '_' + value.HighLevelTxnDesc+"</span><input type='hidden' name='hdnchk' value='0'><input type='checkbox' /> </td>");
            });

            var period=  "<td><select name='period' class ='selectpicker'><option value='0'>--Select-- </option>";
            $.each(model.lstPeriodType,function(key,val){
                if(val!=null)
                {
                    period=period+ "<option value='"+val.periodTypeID+ "'>"+val.periodTypeDesc+"</option>"
                }
            })+"</select></td>";
            $(row).append(period);

            var src=  "<td><select name='source' class ='selectpicker'><option value='0'>--Select-- </option>";//+ t[0].lstSource["SourceDesc"]+ "'    </td>"//+ //+ //4
            $.each(model.lstSource,function(key,val){
                if(val!=null)
                {
                    // src=src+ "<option value='"+val.SourceID+ "'>"+val.SourceDesc+"</option>"
                    src=src+ "<option value='"+val.sourceID+ "'>"+val.sourceDesc+"</option>"
                }
            })+"</select></td>";


            $(row).append(src);
            $(row).append("<td><button type='button' class='removebutton' title='Remove this row'>X</button></td>");

            //srno++;
            //alert('Updated id'+srno);
            return row;
        }



        function getJSONFromTable(model) {
            var cntHighlvlTrans = model.lstHighLevelTxns.length;

            var tableRows = [];
            $("#TT table").each(function(){
                $('tbody tr').each(function () {
                    var self = $(this);
                    var i = 5;

                    $.each(model.lstHighLevelTxns,function(index,value){

                        var reportId=0;
                        //var reportId=self.find("td:nth-child(2) input[type=hidden]").val();
                        var reqReference = self.find("td:nth-child(2) input[type=text]").val();
                        var reportName = self.find("td:nth-child(3) input[type=text]").val();
                        var reportDesc = self.find("td:nth-child(4) input[type=text]").val();

                        var m=(4+cntHighlvlTrans)+1; //period
                        var n=m+1; //System_Source

                        var periodId = self.find("td:nth-child("+m+") select").val();
                        var sourceId = self.find("td:nth-child("+n+") select").val();

                        var isLinked='false';
                        if (self.find("td:nth-child(" + i + ") input[type=checkbox]").is(":checked"))
                            isLinked = 'true';
                        reportId=self.find("td:nth-child(" + i + ") input[type=hidden]").val();

                        var item = null;
                        item = {};

                        item["reportID"]= reportId;
                        item["reqReference"] = reqReference;
                        item["reportDesc"] = reportDesc;
                        item["reportName"]=reportName;
                        item["sourceId"]=sourceId;
                        item["periodId"]=periodId;
                        item["transactionSeq"]=value["TransactionSeq"];
                        item["highLevelTransaction"]=value["HighLevelTxnID"]+"_"+value["HighLevelTxnDesc"];
                        item["IsLinked"]=isLinked;
                        item["daId"]=$("#daId").val();

                        tableRows.push(item);
                        i++;
                    });

                });
            });
            return tableRows;
        };

        function DisableAllSpecialChars(e) {
           
            var regex = new RegExp("^[a-zA-Z0-9]+$");
            var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
            if (!regex.test(key)) {
                if (event.charCode != 32) {//if key stroke is space bar, then pass. ASCII code for space bar is 32, dot is for 46
                    event.preventDefault();
                    return false;
                }
            }
        }

        function DisableSpecialChars(e) {
           
            var regex = new RegExp("^[a-zA-Z0-9]+$");
            var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
            if (!regex.test(key)) {
                if (event.charCode != 32 && event.charCode!=46) {//if key stroke is space bar, then pass. ASCII code for space bar is 32, dot is for 46
                    event.preventDefault();
                    return false;
                }
            }
        }

        function DisableSomeSpecialChars(e) {
           
            var regex = new RegExp("^[a-zA-Z0-9]+$");
            var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
            if (!regex.test(key)) {
                if (event.charCode != 32 && event.charCode != 62 && event.charCode != 61 && event.charCode != 60) {//if key stroke is space bar, then pass. ASCII code for space bar is 32, dot is for 46
                    event.preventDefault();
                    return false;
                }
            }
        }
    </script>

}






