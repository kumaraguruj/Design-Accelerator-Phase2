@model DesignAccelerator.Models.ViewModel.ApplicationViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .button {
        background-color: #af2024;
        color: #ffffff;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit Application</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProjectID)
        @Html.HiddenFor(model => model.ApplicationID)

        <div class="form-group">
            @Html.Label("Application Name", htmlAttributes: new { @class = "control-label col-md-2", @style = "text-align:left" })
            <div class="col-md-10">
                <span class="form-inline" style="margin-left:-50px">
                    @Html.EditorFor(model => model.ApplicationName, new { htmlAttributes = new { @maxlength = "50", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ApplicationName, "", new { @class = "text-danger" })
                </span>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.lstAppVersion, "Application Version", new { @class = "col-md-2 control-label", @style = "text-align:left" })
            <div class="col-md-10">
                <span class="form-inline" style="margin-left:-50px">
                    @Html.DropDownListFor(model => model.AppVersionId, new SelectList(Model.lstAppVersion, "Id ", "AppVersion"), "--Select--", new { @class = "form-control", @required = "Required" })
                </span>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.BankTypeList, "Bank Type", new { @class = "col-md-2 control-label", @style = "text-align:left" })
            <div class="col-md-10">
                <span class="form-inline" style="margin-left:-50px">
                    @Html.DropDownListFor(model => model.BankType, new SelectList(Model.BankTypeList, "Value", "Key"), "--Select--", new { @class = "form-control", @required = "Required" })
                </span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="margin-left:145px">
                <input type="submit" value="Save" class="btn btn-default; button" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back", "Index")
</div>

@section Scripts{
    <script>
        $("#ApplicationName").bind('keypress', function (event) {

            var regex = new RegExp("^[a-zA-Z0-9]+$");
            var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
            if (!regex.test(key)) {
                if (event.charCode != 32) {//if key stroke is space bar, then pass. ASCII code for space bar is 32
                    event.preventDefault();
                    return false;
                }
            }
        });


    </script>
}

